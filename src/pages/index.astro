---
export const prerender = true;
import { persistentAtom } from '@nanostores/persistent'
import ImageGrid from '../components/imageGrid.astro';
import Layout from '../layouts/Layout.astro';

export const imageStore = persistentAtom<ImageEntries[]>('images', [], {
  encode: JSON.stringify,
  decode: JSON.parse,
})
let imageEntryObj: { id: string; url: string; caption: string; }[] = [];
    const userData = await fetch(`https://graph.instagram.com/me/media?fields=id,caption,media_url,timestamp&access_token=${import.meta.env.ACCESS_TOKEN}`).then(function(response) {
    return response.json();
    }).then(function(data) {
		// console.log(data)
    const imageData = data.data;
    for (const entry in imageData) {
		imageEntryObj.push({ id: imageData[entry].id, url: imageData[entry].media_url, caption: imageData[entry].caption, timestamp: imageData[entry].timestamp});
    }
	imageStore.set(imageEntryObj);
});
const imageStoreValues = JSON.parse(persistentAtom('images').get());
---

<Layout>
	<main>
		<ul role="list" class="link-card-grid">
            <ImageGrid images={imageStoreValues}></ImageGrid>
		</ul>
	</main>
</Layout>

<style>
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 1rem;
		padding: 0;
	}
</style>
